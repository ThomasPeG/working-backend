generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(uuid())
  email           String    @unique
  password        String?
  name            String?
  profilePhoto    String?
  gender          String?
  birthDate       DateTime?
  userType        String    @default("employee")
  location        Json?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  phoneNumber     String?
  isActive        Boolean?  @default(true)
  interests       String[]  @default([])
  employeeProfile Employee?
  jobs            Job[]     @relation("EmployerJobs")
}

model Employee {
  id          String       @id @default(uuid())
  userId      String       @unique
  cv          String?
  jobInterests   String[]     @default([])
  skills      String[]     @default([])
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  education   Education[]
  user        User         @relation(fields: [userId], references: [id])
  experiences Experience[]
}

model Job {
  id                 String   @id @default(uuid())
  employerId         String
  title              String
  description        String
  schedule           String?
  salary             Float?
  requiredExperience Int?
  requiredEducation  String?
  requiredAge        Int?
  location           Json?
  isActive           Boolean?  @default(true)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  employer           User     @relation("EmployerJobs", fields: [employerId], references: [id])
}

model Experience {
  id               String    @id @default(uuid())
  employeeId       String
  position         String
  company          String
  description      String?
  startDate        DateTime
  endDate          DateTime?
  currentlyWorking Boolean   @default(false)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  employee         Employee  @relation(fields: [employeeId], references: [id])
}

model Education {
  id                String    @id @default(uuid())
  employeeId        String
  educationType     String?
  institution       String?
  fieldOfStudy      String?
  timeStudying      Int?
  startDate         DateTime
  endDate           DateTime?
  currentlyStudying Boolean?  @default(false)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  employee          Employee  @relation(fields: [employeeId], references: [id])
}
